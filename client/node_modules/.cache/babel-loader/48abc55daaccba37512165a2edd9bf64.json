{"ast":null,"code":"var _jsxFileName = \"/Users/ramyageethikakhandavilli/lighthouse/YardShare-YEG/client/src/components/Connectyards.jsx\";\nimport React, { Component } from \"react\";\nimport { Form, Field } from \"@progress/kendo-react-form\";\nimport { Input } from \"@progress/kendo-react-inputs\";\nimport { DropDownList } from \"@progress/kendo-react-dropdowns\";\n\nconst CustomInput = ({\n  fieldType,\n  invalid,\n  value,\n  visited,\n  touched,\n  valid,\n  onChange,\n  validationMessage\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: fieldType,\n    className: invalid ? \"invalid\" : \"\",\n    value: value,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }), invalid && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }\n  }, validationMessage));\n};\n\nconst DropDown = ({\n  options,\n  fieldType,\n  invalid,\n  value,\n  visited,\n  touched,\n  valid,\n  onChange,\n  validationMessage\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DropDownList, {\n    data: options,\n    type: fieldType,\n    className: invalid ? \"invalid\" : \"\",\n    value: value,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), invalid && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }, validationMessage));\n};\n\nconst ValidationMessage = ({\n  valid,\n  visited,\n  validationMessage\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !valid && visited && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }\n  }, validationMessage));\n};\n\nconst emailValidator = value => new RegExp(/\\S+@\\S+\\.\\S+/).test(value) ? \"\" : \"Please enter a valid email.\";\n\nconst requiredValidator = value => {\n  return value ? \"\" : \"This field is required\";\n};\n\nexport default function App() {\n  const handleSubmit = data => {\n    console.log(`\n    Category: ${data.category}\n    Name: ${data.name}\n    Email: ${data.email}\n    Address: ${data.address}\n    Message: ${data.message}\n    `);\n    data.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    render: formRenderProps => /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: formRenderProps.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"Post a listing\"), /*#__PURE__*/React.createElement(Field, {\n      label: \"Category:\",\n      name: \"category\",\n      component: DropDown,\n      options: forms.render.categories,\n      validator: requiredValidator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      label: \"Name:\",\n      name: \"name\",\n      fieldType: \"text\",\n      component: Input,\n      validator: requiredValidator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      label: \"Email:\",\n      name: \"email\",\n      fieldType: \"email\",\n      component: Input,\n      validator: [requiredValidator, emailValidator],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      label: \"Address:\",\n      name: \"address\",\n      fieldType: \"address\",\n      component: Input,\n      validator: requiredValidator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      label: \"Message:\",\n      name: \"message\",\n      fieldType: \"text\",\n      component: Input,\n      validator: requiredValidator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, \" Submit \")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  });\n}\n;","map":{"version":3,"sources":["/Users/ramyageethikakhandavilli/lighthouse/YardShare-YEG/client/src/components/Connectyards.jsx"],"names":["React","Component","Form","Field","Input","DropDownList","CustomInput","fieldType","invalid","value","visited","touched","valid","onChange","validationMessage","DropDown","options","ValidationMessage","emailValidator","RegExp","test","requiredValidator","App","handleSubmit","data","console","log","category","name","email","address","message","preventDefault","formRenderProps","onSubmit","forms","render","categories"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Field } from \"@progress/kendo-react-form\";\nimport { Input } from \"@progress/kendo-react-inputs\";\nimport { DropDownList } from \"@progress/kendo-react-dropdowns\";\n\n\nconst CustomInput = ({ fieldType,invalid, value, visited, touched, valid,\n  onChange, validationMessage }) => {\n  return (\n    <div>\n      <Input\n        type={fieldType}\n        className={invalid ? \"invalid\" : \"\"}\n        value={value}\n        onChange={onChange} />\n      { invalid && \n        (<div className=\"required\">{validationMessage}</div>) }\n    </div>\n  );\n};\n\nconst DropDown = ({ options, fieldType, invalid, value, visited, touched, valid,\n  onChange, validationMessage}) => {\n  return (\n    <div>\n      <DropDownList\n        data={options}\n        type={fieldType}\n        className={invalid ? \"invalid\" : \"\"}\n        value={value}\n        onChange={onChange} />\n      { invalid && \n        (<div className=\"required\">{validationMessage}</div>) }\n    </div>\n  );\n};\n\n\nconst ValidationMessage = ({ valid, visited, validationMessage }) => {\n  return (\n    <>\n    { !valid && visited &&\n        (<div className=\"required\">{validationMessage}</div>)}\n    </>\n  );\n};\n\nconst emailValidator = (value) => (\n  new RegExp(/\\S+@\\S+\\.\\S+/).test(value) ? \"\" : \"Please enter a valid email.\"\n);\nconst requiredValidator = (value) => {\n  return value ? \"\" : \"This field is required\";\n};\n\nexport default function App() {\n  const handleSubmit = (data) => {\n    console.log(`\n    Category: ${data.category}\n    Name: ${data.name}\n    Email: ${data.email}\n    Address: ${data.address}\n    Message: ${data.message}\n    `);\n    \n    data.preventDefault();\n  }\n\n  return (\n    <Form\n      onSubmit={handleSubmit}\n      render={(formRenderProps) => (\n        <form onSubmit={formRenderProps.onSubmit}>\n          <h1>Post a listing</h1>\n\n          <Field \n            label=\"Category:\"\n            name=\"category\"\n            component={DropDown}\n            options={forms.render.categories}\n            validator={requiredValidator} />\n          \n          <Field\n            label=\"Name:\"\n            name=\"name\"\n            fieldType=\"text\"\n            component={Input}\n            validator={requiredValidator} />\n          \n          <Field\n            label=\"Email:\"\n            name=\"email\"\n            fieldType=\"email\"\n            component={Input}\n            validator={[requiredValidator, emailValidator]} />\n          \n          <Field\n            label=\"Address:\"\n            name=\"address\"\n            fieldType=\"address\"\n            component={Input}\n            validator={requiredValidator} />\n\n          <Field\n            label=\"Message:\"\n            name=\"message\"\n            fieldType=\"text\"\n            component={Input}\n            validator={requiredValidator} />\n\n          <button> Submit </button>\n        </form>\n      )}>\n    </Form>\n  );\n};"]},"metadata":{},"sourceType":"module"}